unit ClientModuleWK;

interface

uses
  System.SysUtils, System.Classes, ClientClassesWK, IPPeerClient,
  Datasnap.DSClientRest, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.StorageBin, Data.DB, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, FireDAC.Stan.StorageJSON;

type
  TClientModuleWKX = class(TDataModule)
    DSRestConnectionWK: TDSRestConnection;
    FDStanStorageJSONLink1: TFDStanStorageJSONLink;
    FDStanStorageBinLink1: TFDStanStorageBinLink;
    PessoaMemTable: TFDMemTable;
    PessoaMemTableCUST_NO: TFDAutoIncField;
    PessoaMemTableCUSTOMER: TStringField;
    PessoaMemTableCONTACT_FIRST: TStringField;
    PessoaMemTableCONTACT_LAST: TStringField;
    PessoaMemTablePHONE_NO: TStringField;
    PessoaMemTableADDRESS_LINE1: TStringField;
    PessoaMemTableADDRESS_LINE2: TStringField;
    PessoaMemTableCITY: TStringField;
    PessoaMemTableSTATE_PROVINCE: TStringField;
    PessoaMemTableCOUNTRY: TStringField;
    PessoaMemTablePOSTAL_CODE: TStringField;
    PessoaMemTableON_HOLD: TStringField;
  private
    FInstanceOwner: Boolean;
    FServerMethods1Client: TServerMethods1Client;
    function GetServerMethods1Client: TServerMethods1Client;
    { Private declarations }
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    property InstanceOwner: Boolean read FInstanceOwner write FInstanceOwner;
    property ServerMethods1Client: TServerMethods1Client read GetServerMethods1Client write FServerMethods1Client;

end;

var
  ClientModuleWKX: TClientModuleWKX;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

constructor TClientModuleWKX.Create(AOwner: TComponent);
begin
  inherited;
  FInstanceOwner := True;
end;

destructor TClientModuleWKX.Destroy;
begin
  FServerMethods1Client.Free;
  inherited;
end;

function TClientModuleWKX.GetServerMethods1Client: TServerMethods1Client;
begin
  if FServerMethods1Client = nil then
    FServerMethods1Client:= TServerMethods1Client.Create(DSRestConnectionWK, FInstanceOwner);
  Result := FServerMethods1Client;
end;

end.
